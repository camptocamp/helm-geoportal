---
name: Continuous integration

on:
  push:
  pull_request:

env:
  HAS_SECRETS: ${{ secrets.HAS_SECRETS }}

jobs:
  main:
    runs-on: ubuntu-20.04
    name: Continuous integration
    timeout-minutes: 20
    if: "!startsWith(github.event.head_commit.message, '[skip ci] ')"

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: camptocamp/initialise-gopass-summon-action@v2
        with:
          ci-gpg-private-key: ${{secrets.CI_GPG_PRIVATE_KEY}}
          github-gopass-ci-token: ${{secrets.GOPASS_CI_GITHUB_TOKEN}}
        if: env.HAS_SECRETS == 'HAS_SECRETS'

      - run: echo "${HOME}/.local/bin" >> ${GITHUB_PATH}
      - run: python3 -m pip install --user --requirement=ci/requirements.txt

      - name: Checks
        run: c2cciutils-checks

      - uses: azure/setup-helm@v1
      - run: helm dependency update .
      - run: helm lint .
      - run: helm template --namespace=default test . > tests/actual.yaml
      - run: diff --ignore-trailing-space tests/actual.yaml tests/expected.yaml
      - run: helm lint --values=tests/full.yaml .
      - run: helm template --namespace=default --values=tests/full.yaml test . > tests/full-actual.yaml
      - run: diff --ignore-trailing-space tests/full-actual.yaml tests/full-expected.yaml

      # Setup k3s/k3d
      - run: wget -q -O - https://raw.githubusercontent.com/rancher/k3d/main/install.sh | TAG=v4.4.8 bash
      - run: k3d --version
      - run: >-
          k3d cluster create test-cluster-1
          --no-lb
          --no-hostip
          --no-rollback
          --k3s-server-arg "--no-deploy=traefik,servicelb,metrics-server"

      - run: kubectl apply -f tests/expected.yaml
      - run: ci/k8s-logs || true
        if: always()
      - run: kubectl delete -f tests/expected.yaml
      - run: kubectl apply -f tests/full-expected.yaml
      - run: kubectl delete -f tests/full-expected.yaml

      - run: ci/k8s-logs || true
        if: always()

      - name: Publish
        run: c2cciutils-publish
